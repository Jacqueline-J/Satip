name: Plots

on: [push]

jobs:
  plots:
    strategy:
      matrix:
        python-version: ["3.12"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Do some macOS specific installs for Python 3.12
        run: |
          brew install ${{inputs.brew_install}}
        if: matrix.os == 'macos-latest'

      - name: Do some Ubunutu specific installs for Python 3.12
        if: runner.os == 'Linux'
        run: |
          sudo apt install ${{inputs.sudo_apt_install}}

      - name: Install dependencies
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          $CONDA/bin/conda install eccodes numpy matplotlib rasterio satpy[all] cartopy -c conda-forge
          $CONDA/bin/pip install -e .
          
      - name: Set up Conda 
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: Create and activate Conda environment
        run: |
          conda create --name myenv python=${{ matrix.python-version }} -y
          echo "conda activate myenv" >> $GITHUB_ENV
          conda activate myenv
          conda install eccodes numpy matplotlib rasterio satpy[all] cartopy -c conda-forge
          pip install -e .
        shell: bash -l {0}

      - name: Verify CartoPy Installation
        run: |
          $CONDA/bin/python -m pip show cartopy
          $CONDA/bin/python -c "import cartopy; print(cartopy.__version__)"

      - name: Verify Python Path
        run: |
          which python
          python --version
        
      - name: Run plotting script
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EUMETSAT_USER_KEY: ${{ secrets.EUMETSAT_USER_KEY }}
          EUMETSAT_USER_SECRET: ${{ secrets.EUMETSAT_USER_SECRET }}
        run: |
          python scripts/generate_test_plots.py
          cml-publish cloud_mask_UK.png --md >> report.md
          cml-publish rss_UK.png --md >> report.md
          cml-publish hrv_UK.png --md >> report.md
          cml-publish cloud_mask_RSS.png --md >> report.md
          cml-publish rss_RSS.png --md >> report.md
          cml-publish hrv_RSS.png --md >> report.md
          # cml-publish tailored_cloud_mask.png --md >> report.md
          # cml-publish tailored_rss.png --md >> report.md
          cml-send-comment report.md

      - name: Archive plots
        uses: actions/upload-artifact@v2
        with:
          name: plots
          path: |
            *.png
            report.md  # Add the report file to the artifacts for reference
